# version: "2"
## services:
#   db:
#     # image: postgres:12.12-alpine
#     # image: matthewfreilly/postgres:12.12-alpine
#     image: 801819443153.dkr.ecr.us-east-2.amazonaws.com/matthewfreilly/postgres
#     container_name: postgres-container
#     restart: always
#     read_only: true
#     # init: true
#     build: 
#       context: ./
#       dockerfile: ./Dockerfile
#     environment:
#       PORT: 5432
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#       POSTGRES_DB: books
#     logging:
#       driver: awslogs
#       options:
#          awslogs-group: tcpdatanew1
#          awslogs-region: us-east-2
#          awslogs-stream-prefix: tcpdatanew-postgres
#     expose:
#       - "5432:5432"
#     volumes: 
#       # - db:/var/lib/postgresql/data
#       - https://tcpdatahelper.s3.us-east-2.amazonaws.com/booksbackup.sql :/var/lib/postgresql/data
#       # - ./postgresdata/booksbackup.sql:/docker-entrypoint-initdb.d/booksbackup.sql
#     #  - ./postgresdata/booksbackup.sql:/docker-entrypoint-initdb.d/booksbackup.sql
#       - db:/var/lib/postgresql/data
#       - ./postgres_data/books_backup.sql:/docker-entrypoint-initdb.d/books_backup.sql
#   api:
#     # image: flask-app
#     # image: matthewfreilly/flask-app
#     image: 801819443153.dkr.ecr.us-east-2.amazonaws.com/matthewfreilly/flask-app:latest
#     container_name: flask-container
#     read_only: true
#     build:
#       context: ./
#       dockerfile: ./python/Dockerfile
#     restart: always
#     ports:
#       - "127.0.0.1:5000:5000"
#     environment:
#       DB_HOST: db
#       PORT_APP: 5000
#       PORT_API: 5432
#       DB_PORT: 5432
#       DB_USER: postgres
#       DB_PASSWORD: postgres
#       DB_NAME: books
#     logging:
#       driver: awslogs
#       options:
#          awslogs-group: tcpdatanew1
#          awslogs-region: us-east-2
#          awslogs-stream-prefix: tcpdatanew-api

#     # LINKS REMOVED TO BUILD TO ECS
#     links:
#       - db
#     volumes:
#       # - ./:/usr/src/app/
#         - /:/usr/src/app/
#     env_file:
#       - ./python/.env.dev
#     depends_on:
#       - db  
#   web: 
#     # image: vue-app
#     # image: matthewfreilly/vue-app
#     image: 801819443153.dkr.ecr.us-east-2.amazonaws.com/matthewfreilly/vue-app
#     container_name: vue-container
#     read_only: true
#     build:
#       context: ./
#       dockerfile: ./vue/Dockerfile
#     volumes:
#       # - ./vue/build:/usr/src/app/vue
#       # - /Users/matthewreilly/ecco2insight/ECCO2Insight/habitat-practice/vue/build:/usr/src/app/vue
#       - /vue/build:/usr/src/app/vue
#     logging:
#       driver: awslogs
#       options:
#          awslogs-group: tcpdatanew1
#          awslogs-region: us-east-2
#          awslogs-stream-prefix: tcpdatanew-vue
#     ports:
#       - 8080:8080
#   nginx:
#     # image: nginx-app
#     # image: matthewfreilly/nginx-app
#     image: 801819443153.dkr.ecr.us-east-2.amazonaws.com/matthewfreilly/nginx-app:latest
#     container_name: nginx-container
#     read_only: true
#     # build: 
#     #   dockerfile: ./nginx/Dockerfile
#     volumes:
#       # - ./etc/nginx/nginx.conf:/etc/nginx/conf.d/
#       - /Users/matthewreilly/ecco2insight/ECCO2Insight/habitat-practice/etc/nginx/nginx.conf:/etc/nginx/conf.d/
#       # - /etc/nginx/nginx.conf:/etc/nginx/conf.d/
#     ports:
#       - "80:80"
#     logging:
#       driver: awslogs
#       options:
#          awslogs-group: tcpdatanew1
#          awslogs-region: us-east-2
#          awslogs-stream-prefix: tcpdatanew-nginx
#     depends_on:
#       - api 
#       - web   
# volumes:
#   db:
#     driver: local



version: "2"
services:
  db:
    image: 801819443153.dkr.ecr.us-east-2.amazonaws.com/matthewfreilly/postgres
    #container_name: postgres-container
    # restart: always
    # read_only: true
    # init: true
    build: 
      context: ./
      dockerfile: ./Dockerfile
    # environment:
    #   PORT: 5432
    #   POSTGRES_USER: postgres
    #   POSTGRES_PASSWORD: postgres
    #   POSTGRES_DB: books
    env_file: "./.env"
    ports:
      - "5432:5432"
    # expose:
    #   - "5432"
      # - "5432"
    # logging:
    #   driver: awslogs
    #   options:
    #      awslogs-group: tcpdatanew1-postgres
    #      awslogs-region: us-east-2
    #      awslogs-stream-prefix: tcpdatanew1-postgres
    volumes:
      - db:/var/lib/postgresql/data
      - /Users/matthewreilly/ecco2insight/ECCO2Insight/habitat-practice/postgres_data/books_backup.sql:/docker-entrypoint-initdb.d/books_backup.sql

    # volumes: 
      # - type: bind
      #- /Users/matthewreilly/ecco2insight/ECCO2Insight/habitat-practice/postgres_data/books_backup.sql:/
      # - /Users/matthewreilly/ecco2insight/ECCO2Insight/habitat-practice/postgres_data/books_backup.sql:/
      #- /Users/matthewreilly/ecco2insight/ECCO2Insight/habitat-practice/postgresdata/booksbackup.sql:/docker-entrypoint-initdb.d/var/lib/postgresql/data/
      # - /Users/matthewreilly/ecco2insight/ECCO2Insight/habitat-practice/postgresdata/booksbackup.sql:/docker-entrypoint-initdb.d/tmp/booksbackup.sql
      # - db:/tmp/booksbackup.sql
      #- /Users/matthewreilly/ecco2insight/ECCO2Insight/habitat-practice/postgresdata/booksbackup.sql:docker-entrypoint-initdb.d/var/lib/postgresql/data/booksbackup.sql
      # - type: volume
      #   source: db
      #   target: /Users/matthewreilly/ecco2insight/ECCO2Insight/habitat-practice/postgres_data/books_backup.sql
     # - /Users/matthewreilly/ecco2insight/ECCO2Insight/habitat-practice/postgres_data/books_backup.sql:/docker-entrypoint-initdb.d/books_backup.sql
      #- postgresdata/booksbackup.sql:/var/lib/postgresql/data
      #- /Users/matthewreilly/ecco2insight/ECCO2Insight/habitat-practice/postgresdata/booksbackup.sql:/docker-entrypoint-initdb.d/booksbackup.sql/tmp/
      #- https://tcpdatahelper.s3.us-east-2.amazonaws.com/booksbackup.sql:/docker-entrypoint-initdb.d/booksbackup.sql
  api:
    image: 801819443153.dkr.ecr.us-east-2.amazonaws.com/matthewfreilly/flask-app:latest
    #container_name: flask-container
    # read_only: true
    build:
      context: ./
      dockerfile: ./python/Dockerfile
    # restart: always
    ports:
      # - "127.0.0.1:5000:5000"
        # - 127.0.0.1:5000:5000
      # - "127.0.0.1:5000:5000"
      - "127.0.0.1:5000:5000"
      # - "127.0.0.1:5000:5000"
    #env_file:
      # - ./python/.env.dev
      #- ./python/.env.prod
    # links:
    #   - db
    #volumes:
    # - /Users/matthewreilly/ecco2insight/ECCO2Insight/habitat-practice/:/usr/src/app/
    env_file:
    #   # - ./python/.env.dev
      - ./python/.env.prod
    # logging:
    #   driver: awslogs
    #   options:
    #      awslogs-group: tcpdatanew1-api
    #      awslogs-region: us-east-2
    #      awslogs-stream-prefix: tcpdatanew1-api
    #depends_on:
    #  - db  
  web: 
    image: 801819443153.dkr.ecr.us-east-2.amazonaws.com/matthewfreilly/vue-app
    #container_name: vue-container
    # read_only: true
    build:
      context: ./
      dockerfile: ./vue/Dockerfile
    #volumes:
    # - /Users/matthewreilly/ecco2insight/ECCO2Insight/habitat-practice/vue
    # logging:
    #   driver: awslogs
    #   options:
    #      awslogs-group: tcpdatanew1-web
    #      awslogs-region: us-east-2
    #      awslogs-stream-prefix: tcpdatanew1-web
    ports:
      - "8080:8080"
  nginx:
    image: 801819443153.dkr.ecr.us-east-2.amazonaws.com/matthewfreilly/nginx-app:latest
    #container_name: nginx-container
    # read_only: true
    build: 
      context: ./
      dockerfile: ./nginx/Dockerfile
    environment:
       POSTGRES_PASSWORD: postgres
       POSTGRES_USER: postgres
    # volumes:
    #   - type: bind
    #   - target: /etc/nginx/conf.d/
    ports:
      - "80:80"
    # logging:
    #   driver: awslogs
    #   options:
    #      awslogs-group: tcpdatanew1-nginx
    #      awslogs-region: us-east-2
    #      awslogs-stream-prefix: tcpdatanew1-nginx
    # depends_on:
    #   - api 
    #   - web  
    # links:
    #   - api 
    #   - web   
volumes:
  db: 
    # driver: local 
